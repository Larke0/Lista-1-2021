#include <stdio.h>
#include <stdlib.h>  



void multmatrix(int **A,int**B, int**C, int la, int ca, int cb){
  int i, j, k;
  int n;
  for (i=0;i<la;i++){
    for (j=0;j<cb;j++){
      n=0;
      for(k=0;k<ca;k++){
        n+=A[i][k]*B[k][j];
      }
      C[i][j]=n;
    }
  }
}

void show(int **A, int nl, int nc){
  int i, j;
  for(i=0;i<nl;i++){
    for(j=0;j<nc;j++){
      printf("%d ",A[i][j]);
    }
    printf("\n");
  }
}


int main(void) {
  int la = 2, ca= 3, cb= 2;



  //Matriz A
  int **A = (int **)malloc(la * sizeof(int*));
  for(int i = 0; i < la; i++) A[i] = (int *)malloc(ca * sizeof(int));

  A[0][0]=2;A[0][1]=3;A[0][2]=1;
  A[1][0]=-1;A[1][1]=0;A[1][2]=2;
  printf("\n\nA\n");
  show(A,la,ca);
//Matriz B
  int **B = (int **)malloc(ca * sizeof(int*));
  for(int i = 0; i < ca; i++) B[i] = (int *)malloc(cb * sizeof(int));
  B[0][0]=1;B[0][1]=-2;
  B[1][0]=0;B[1][1]=5;
  B[2][0]=4;B[2][1]=1;
  printf("\n\nB\n");
  show(B,ca,cb);


  //Matriz C
  int **C = (int **)malloc(la * sizeof(int*));
  for(int i = 0; i < la; i++) C[i] = (int *)malloc(cb * sizeof(int));
  printf("\n\nC antes\n");
  show(C,la,cb);

  multmatrix(A,B,C,la,ca,cb);
  printf("\n\nC depois\n");
  show(C,la,cb);
  return 0;
}
